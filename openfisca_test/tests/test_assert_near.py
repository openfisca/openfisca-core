import functools

import numpy
import pytest

import openfisca_test as test
from openfisca_core import indexed_enums as enum, periods

instant = periods.Instant((2024, 1, 1))
date = numpy.array(("2024-01-01",), dtype="datetime64[D]")


def value(value):
    return value


def sequence(value):
    return (value,)


def scalar(value):
    if isinstance(value, enum.EnumArray):
        return numpy.array(value.decode())
    return numpy.array(value)


def array(value):
    if isinstance(value, enum.EnumArray):
        return numpy.array((value.decode(),))
    return numpy.array((value,))


class TestEnum(enum.Enum):
    tenant = "tenant"
    owner = "owner"


@functools.lru_cache
def enum_array(value):
    return TestEnum.encode(numpy.array(value))


@pytest.mark.parametrize("f", (value, sequence, scalar, array))
@pytest.mark.parametrize("g", (value, sequence, scalar, array))
@pytest.mark.parametrize(
    "arg1, arg2, expected",
    [
        (enum_array(("tenant", "owner")), enum_array(("tenant", "owner")), True),
        (enum_array(("tenant", "owner")), enum_array(("tenant",)), False),
        (enum_array(("tenant", "owner")), enum_array(("owner",)), False),
        (enum_array(("tenant", "owner")), TestEnum, True),
        (enum_array(("tenant", "owner")), TestEnum.tenant, False),
        (enum_array(("tenant", "owner")), TestEnum.owner, False),
        (enum_array(("tenant", "owner")), instant.date, False),
        (enum_array(("tenant", "owner")), date, False),
        (enum_array(("tenant", "owner")), True, False),
        (enum_array(("tenant", "owner")), 0, False),
        (enum_array(("tenant", "owner")), 1, False),
        (enum_array(("tenant", "owner")), 0.0, False),
        (enum_array(("tenant", "owner")), 1.0, False),
        (enum_array(("tenant", "owner")), "TestEnum", False),
        (enum_array(("tenant", "owner")), "True", False),
        (enum_array(("tenant", "owner")), "1", False),
        (enum_array(("tenant", "owner")), "1.0", False),
        (enum_array(("tenant", "owner")), "tenant", False),
        (enum_array(("tenant", "owner")), "owner", False),
        (enum_array(("tenant",)), enum_array(("tenant", "owner")), False),
        (enum_array(("tenant",)), enum_array(("tenant",)), True),
        (enum_array(("tenant",)), enum_array(("owner",)), False),
        (enum_array(("tenant",)), TestEnum, False),
        (enum_array(("tenant",)), TestEnum.tenant, True),
        (enum_array(("tenant",)), TestEnum.owner, False),
        (enum_array(("tenant",)), instant.date, False),
        (enum_array(("tenant",)), date, False),
        (enum_array(("tenant",)), True, False),
        (enum_array(("tenant",)), 0, False),
        (enum_array(("tenant",)), 1, False),
        (enum_array(("tenant",)), 0.0, False),
        (enum_array(("tenant",)), 1.0, False),
        (enum_array(("tenant",)), "TestEnum", False),
        (enum_array(("tenant",)), "True", False),
        (enum_array(("tenant",)), "1", False),
        (enum_array(("tenant",)), "1.0", False),
        (enum_array(("tenant",)), "tenant", True),
        (enum_array(("tenant",)), "owner", False),
        (enum_array(("owner",)), enum_array(("tenant", "owner")), False),
        (enum_array(("owner",)), enum_array(("tenant",)), False),
        (enum_array(("owner",)), enum_array(("owner",)), True),
        (enum_array(("owner",)), TestEnum, False),
        (enum_array(("owner",)), TestEnum.tenant, False),
        (enum_array(("owner",)), TestEnum.owner, True),
        (enum_array(("owner",)), instant.date, False),
        (enum_array(("owner",)), date, False),
        (enum_array(("owner",)), True, False),
        (enum_array(("owner",)), 0, False),
        (enum_array(("owner",)), 1, False),
        (enum_array(("owner",)), 0.0, False),
        (enum_array(("owner",)), 1.0, False),
        (enum_array(("owner",)), "TestEnum", False),
        (enum_array(("owner",)), "True", False),
        (enum_array(("owner",)), "1", False),
        (enum_array(("owner",)), "1.0", False),
        (enum_array(("owner",)), "tenant", False),
        (enum_array(("owner",)), "owner", True),
        (TestEnum, enum_array(("tenant", "owner")), True),
        (TestEnum, enum_array(("tenant",)), False),
        (TestEnum, enum_array(("owner",)), False),
        (TestEnum, TestEnum, True),
        (TestEnum, TestEnum.tenant, False),
        (TestEnum, TestEnum.owner, False),
        (TestEnum, instant.date, False),
        (TestEnum, date, False),
        (TestEnum, True, False),
        (TestEnum, 0, False),
        (TestEnum, 1, False),
        (TestEnum, 0.0, False),
        (TestEnum, 1.0, False),
        (TestEnum, "TestEnum", False),
        (TestEnum, "True", False),
        (TestEnum, "1", False),
        (TestEnum, "1.0", False),
        (TestEnum, "tenant", False),
        (TestEnum, "owner", False),
        (TestEnum.tenant, enum_array(("tenant", "owner")), False),
        (TestEnum.tenant, enum_array(("tenant",)), True),
        (TestEnum.tenant, enum_array(("owner",)), False),
        (TestEnum.tenant, TestEnum, False),
        (TestEnum.tenant, TestEnum.tenant, True),
        (TestEnum.tenant, TestEnum.owner, False),
        (TestEnum.tenant, instant.date, False),
        (TestEnum.tenant, date, False),
        (TestEnum.tenant, True, False),
        (TestEnum.tenant, 0, False),
        (TestEnum.tenant, 1, False),
        (TestEnum.tenant, 0.0, False),
        (TestEnum.tenant, 1.0, False),
        (TestEnum.tenant, "TestEnum", False),
        (TestEnum.tenant, "True", False),
        (TestEnum.tenant, "1", False),
        (TestEnum.tenant, "1.0", False),
        (TestEnum.tenant, "tenant", True),
        (TestEnum.tenant, "owner", False),
        (TestEnum.owner, enum_array(("tenant", "owner")), False),
        (TestEnum.owner, enum_array(("tenant",)), False),
        (TestEnum.owner, enum_array(("owner",)), True),
        (TestEnum.owner, TestEnum, False),
        (TestEnum.owner, TestEnum.tenant, False),
        (TestEnum.owner, TestEnum.owner, True),
        (TestEnum.owner, instant.date, False),
        (TestEnum.owner, date, False),
        (TestEnum.owner, True, False),
        (TestEnum.owner, 0, False),
        (TestEnum.owner, 1, False),
        (TestEnum.owner, 0.0, False),
        (TestEnum.owner, 1.0, False),
        (TestEnum.owner, "TestEnum", False),
        (TestEnum.owner, "True", False),
        (TestEnum.owner, "1", False),
        (TestEnum.owner, "1.0", False),
        (TestEnum.owner, "tenant", False),
        (TestEnum.owner, "owner", True),
        (instant.date, enum_array(("tenant", "owner")), False),
        (instant.date, enum_array(("tenant",)), False),
        (instant.date, enum_array(("owner",)), False),
        (instant.date, TestEnum, False),
        (instant.date, TestEnum.tenant, False),
        (instant.date, TestEnum.owner, False),
        (instant.date, instant.date, True),
        (instant.date, date, True),
        (instant.date, True, False),
        (instant.date, 0, False),
        (instant.date, 1, False),
        (instant.date, 0.0, False),
        (instant.date, 1.0, False),
        (instant.date, "TestEnum", False),
        (instant.date, "True", False),
        (instant.date, "1", False),
        (instant.date, "1.0", False),
        (instant.date, "tenant", False),
        (instant.date, "owner", False),
        (date, enum_array(("tenant", "owner")), False),
        (date, enum_array(("tenant",)), False),
        (date, enum_array(("owner",)), False),
        (date, TestEnum, False),
        (date, TestEnum.tenant, False),
        (date, TestEnum.owner, False),
        (date, instant.date, True),
        (date, date, True),
        (date, True, False),
        (date, 0, False),
        (date, 1, False),
        (date, 0.0, False),
        (date, 1.0, False),
        (date, "TestEnum", False),
        (date, "True", False),
        (date, "1", False),
        (date, "1.0", False),
        (date, "tenant", False),
        (date, "owner", False),
        (True, enum_array(("tenant", "owner")), False),
        (True, enum_array(("tenant",)), False),
        (True, enum_array(("owner",)), False),
        (True, TestEnum, False),
        (True, TestEnum.tenant, False),
        (True, TestEnum.owner, False),
        (True, instant.date, False),
        (True, date, False),
        (True, True, True),
        (True, 0, False),
        (True, 1, True),
        (True, 0.0, False),
        (True, 1.0, True),
        (True, "TestEnum", False),
        (True, "True", True),
        (True, "1", True),
        (True, "1.0", True),
        (True, "tenant", False),
        (True, "owner", False),
        (0, enum_array(("tenant", "owner")), False),
        (0, enum_array(("tenant",)), False),
        (0, enum_array(("owner",)), False),
        (0, TestEnum, False),
        (0, TestEnum.tenant, False),
        (0, TestEnum.owner, False),
        (0, instant.date, False),
        (0, date, False),
        (0, True, False),
        (0, 0, True),
        (0, 1, False),
        (0, 0.0, True),
        (0, 1.0, False),
        (0, "TestEnum", False),
        (0, "True", False),
        (0, "1", False),
        (0, "1.0", False),
        (0, "tenant", False),
        (0, "owner", False),
        (1, enum_array(("tenant", "owner")), False),
        (1, enum_array(("tenant",)), False),
        (1, enum_array(("owner",)), False),
        (1, TestEnum, False),
        (1, TestEnum.tenant, False),
        (1, TestEnum.owner, False),
        (1, instant.date, False),
        (1, date, False),
        (1, True, True),
        (1, 0, False),
        (1, 1, True),
        (1, 0.0, False),
        (1, 1.0, True),
        (1, "TestEnum", False),
        (1, "True", True),
        (1, "1", True),
        (1, "1.0", True),
        (1, "tenant", False),
        (1, "owner", False),
        (0.0, enum_array(("tenant", "owner")), False),
        (0.0, enum_array(("tenant",)), False),
        (0.0, enum_array(("owner",)), False),
        (0.0, TestEnum, False),
        (0.0, TestEnum.tenant, False),
        (0.0, TestEnum.owner, False),
        (0.0, instant.date, False),
        (0.0, date, False),
        (0.0, True, False),
        (0.0, 0, True),
        (0.0, 1, False),
        (0.0, 0.0, True),
        (0.0, 1.0, False),
        (0.0, "TestEnum", False),
        (0.0, "True", False),
        (0.0, "1", False),
        (0.0, "1.0", False),
        (0.0, "tenant", False),
        (0.0, "owner", False),
        (1.0, enum_array(("tenant", "owner")), False),
        (1.0, enum_array(("tenant",)), False),
        (1.0, enum_array(("owner",)), False),
        (1.0, TestEnum, False),
        (1.0, TestEnum.tenant, False),
        (1.0, TestEnum.owner, False),
        (1.0, instant.date, False),
        (1.0, date, False),
        (1.0, True, True),
        (1.0, 0, False),
        (1.0, 1, True),
        (1.0, 0.0, False),
        (1.0, 1.0, True),
        (1.0, "TestEnum", False),
        (1.0, "True", True),
        (1.0, "1", True),
        (1.0, "1.0", True),
        (1.0, "tenant", False),
        (1.0, "owner", False),
        (0, enum_array(("tenant", "owner")), False),
        (0, enum_array(("tenant",)), False),
        (0, enum_array(("owner",)), False),
        (0, TestEnum, False),
        (0, TestEnum.tenant, False),
        (0, TestEnum.owner, False),
        (0, instant.date, False),
        (0, date, False),
        (0, True, False),
        (0, 0, True),
        (0, 1, False),
        (0, 0.0, True),
        (0, 1.0, False),
        (0, "TestEnum", False),
        (0, "True", False),
        (0, "1", False),
        (0, "1.0", False),
        (0, "tenant", False),
        (0, "owner", False),
        ("TestEnum", enum_array(("tenant", "owner")), False),
        ("TestEnum", enum_array(("tenant",)), False),
        ("TestEnum", enum_array(("owner",)), False),
        ("TestEnum", TestEnum, False),
        ("TestEnum", TestEnum.tenant, False),
        ("TestEnum", TestEnum.owner, False),
        ("TestEnum", instant.date, False),
        ("TestEnum", date, False),
        ("TestEnum", True, False),
        ("TestEnum", 0, False),
        ("TestEnum", 1, False),
        ("TestEnum", 0.0, False),
        ("TestEnum", 1.0, False),
        ("TestEnum", "TestEnum", True),
        ("TestEnum", "True", False),
        ("TestEnum", "1", False),
        ("TestEnum", "1.0", False),
        ("TestEnum", "tenant", False),
        ("TestEnum", "owner", False),
        ("True", enum_array(("tenant", "owner")), False),
        ("True", enum_array(("tenant",)), False),
        ("True", enum_array(("owner",)), False),
        ("True", TestEnum, False),
        ("True", TestEnum.tenant, False),
        ("True", TestEnum.owner, False),
        ("True", instant.date, False),
        ("True", date, False),
        ("True", True, True),
        ("True", 0, False),
        ("True", 1, True),
        ("True", 0.0, False),
        ("True", 1.0, True),
        ("True", "TestEnum", False),
        ("True", "True", True),
        ("True", "1", True),
        ("True", "1.0", True),
        ("True", "tenant", False),
        ("True", "owner", False),
        ("1", enum_array(("tenant", "owner")), False),
        ("1", enum_array(("tenant",)), False),
        ("1", enum_array(("owner",)), False),
        ("1", TestEnum, False),
        ("1", TestEnum.tenant, False),
        ("1", TestEnum.owner, False),
        ("1", instant.date, False),
        ("1", date, False),
        ("1", True, True),
        ("1", 0, False),
        ("1", 1, True),
        ("1", 0.0, False),
        ("1", 1.0, True),
        ("1", "TestEnum", False),
        ("1", "True", True),
        ("1", "1", True),
        ("1", "1.0", True),
        ("1", "tenant", False),
        ("1", "owner", False),
        ("1.0", enum_array(("tenant", "owner")), False),
        ("1.0", enum_array(("tenant",)), False),
        ("1.0", enum_array(("owner",)), False),
        ("1.0", TestEnum, False),
        ("1.0", TestEnum.tenant, False),
        ("1.0", TestEnum.owner, False),
        ("1.0", instant.date, False),
        ("1.0", date, False),
        ("1.0", True, True),
        ("1.0", 0, False),
        ("1.0", 1, True),
        ("1.0", 0.0, False),
        ("1.0", 1.0, True),
        ("1.0", "TestEnum", False),
        ("1.0", "True", True),
        ("1.0", "1", True),
        ("1.0", "1.0", True),
        ("1.0", "tenant", False),
        ("1.0", "owner", False),
        ("tenant", enum_array(("tenant", "owner")), False),
        ("tenant", enum_array(("tenant",)), True),
        ("tenant", enum_array(("owner",)), False),
        ("tenant", TestEnum, False),
        ("tenant", TestEnum.tenant, True),
        ("tenant", TestEnum.owner, False),
        ("tenant", instant.date, False),
        ("tenant", date, False),
        ("tenant", True, False),
        ("tenant", 0, False),
        ("tenant", 1, False),
        ("tenant", 0.0, False),
        ("tenant", 1.0, False),
        ("tenant", "TestEnum", False),
        ("tenant", "True", False),
        ("tenant", "1", False),
        ("tenant", "1.0", False),
        ("tenant", "tenant", True),
        ("tenant", "owner", False),
        ("owner", enum_array(("tenant", "owner")), False),
        ("owner", enum_array(("tenant",)), False),
        ("owner", enum_array(("owner",)), True),
        ("owner", TestEnum, False),
        ("owner", TestEnum.tenant, False),
        ("owner", TestEnum.owner, True),
        ("owner", instant.date, False),
        ("owner", date, False),
        ("owner", True, False),
        ("owner", 0, False),
        ("owner", 1, False),
        ("owner", 0.0, False),
        ("owner", 1.0, False),
        ("owner", "TestEnum", False),
        ("owner", "True", False),
        ("owner", "1", False),
        ("owner", "1.0", False),
        ("owner", "tenant", False),
        ("owner", "owner", True),
    ],
)
def test_assert_near(f, g, arg1, arg2, expected):
    if expected:
        test.assert_near(f(arg1), g(arg2))
    else:
        with pytest.raises(AssertionError):
            test.assert_near(f(arg1), g(arg2))
